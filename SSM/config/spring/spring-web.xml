<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
     <!-- 
     	配置SpringMVC 
		 1.开启SpringMVC注解模式 
	 简化配置： 
		(1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 
      -->
         
         <!-- 配置处理器适配器 和 处理器映射器 -->
         <mvc:annotation-driven></mvc:annotation-driven>   
         
         
          <!-- 3.配置jsp 显示ViewResolver -->
	 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	 		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	 		<property name="prefix" value="/WEB-INF/jsp/" />
	 		<property name="suffix" value=".jsp" />
	 	</bean> 
	 	<!-- 
	 	我们在编写玩handler(controller)之后 需要在我们的配置文件注入handler 到spring容器总
	 	<bean class="com.smarty.space.controller.Controller1"></bean>
	 	
	 		但是在实际开发总，我们可以使用自动扫描 
	 	 -->
	 	
	 	<!-- 4.扫描web相关的bean -->
	 	<context:component-scan base-package="com.smarty.space.user.controller" />    
</beans>